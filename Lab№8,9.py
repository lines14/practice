print('\nЗадание №1:\n')

# Импортируем модуль re для исключения 
# из элементов списков символов переносов "\n":

import re

# Задаём конструкцию try-except с 
# исключением ошибки нахождения файла в каталоге:

try:
    j = []

    # Задаём конструкцию with-as для автоматического 
    # закрытия обрабатываемого файла после операций:

    with open('Lab№8,9.txt', 'r', encoding='utf-8') as x:
        y = x.readlines()

    for i in y:
        i = re.sub('[\n]','',i)
        j.append(i.split(','))

    print(j)
    print()

except FileNotFoundError:
    print('Запрашиваемый файл отсутствует в каталоге.\n')

print('\nЗадание №2:\n')

print('Это программа для решения квадратных уравнений ax^2+bx+c=0.\n')
a = float(input('Введите коэффициент a: '))
b = float(input('Введите коэффициент b: '))
c = float(input('Введите коэффициент c: '))
c_inv = -int(c)

# Задаём конструкцию try-except с 
# исключением ошибки деления на ноль 
# для исключения равенства переменной "a" нулю:

try:
    1/a

    if b==c==0:
        print('\nТак как коэффициенты b и c равны нулю, квадратное уравнение является тождеством:\nКорень x1 = 0\n')

    elif b==0 and c_inv/a<0:
        print('\nТак как корень может существовать только из неотрицательного числа,\nквадратное уравнение не имеет смысла и действительных корней.\n')

    else:
        D = b**2-4*a*c
        print('\nДискриминант D =','{:.2f}'.format(D))

        if D<0:
            print('\nТак как дискриминант меньше нуля, квадратное уравнение не имеет действительных корней.\n')

        elif D==0:
            x1_1 = -b/(2*a)
            print('\nТак как дискриминант равен нулю, находим один корень:\n')
            print(f'Корень x1 = {x1_1}\n')
            
        else:
            x1 = (-b+D**0.5)/(2*a)
            x2 = (-b-D**0.5)/(2*a)
            print('\nТак как дискриминант больше нуля, находим два корня:\n')
            print(f"Корень x1 = {x1}")
            print(f"Корень x2 = {x2}\n")

except ZeroDivisionError:
    print('\nТак как коэффициент a = 0, это не квадратное уравнение.\n')